[tool.poetry]
authors = [
  "Kaiyuan Zhu <kaiyuan-zhu@ucsd.edu>",
  "Matt Jones <mgjones@stanford.edu>",
  "Jens Luebeck <jluebeck@ucsd.edu>",
  "Suhas Rao <nsuhasrao@gmail.com>"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",        # Specify Python 3 only
  "Operating System :: MacOS :: MacOS X",
  "Operating System :: Microsoft :: Windows",
  "Operating System :: POSIX :: Linux",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]
description = "Amplicon reconstruction from long-read data"
homepage = "https://github.com/AmpliconSuite/CoRAL"
license = "MIT"
name = "CoRAL"
readme = 'README.md'
repository = "https://github.com/AmpliconSuite/CoRAL"
version = "2.1.0"

packages = [{ include = "coral" }]

[tool.poetry.dependencies]
cvxopt = ">=1.3.2"
cnvkit = { git = "https://github.com/suhas-r/cnvkit.git", branch = "master" }
intervaltree = "*"
matplotlib = "*"
pandas = { version = ">=2.2.3", python = "=3.12.*" }
pysam = { version = ">0.1.7" }
pytest = { version = ">=4.4", optional = true }
python = "=3.12.*"
numpy = "==2.0.2"
numba = "==0.60.0"
llvmlite = "==0.43.0"
scanpydoc = { version = ">=0.5", optional = true }
typing-extensions = ">=3.7.4"
typing_extensions = { version = "*", python = "<3.9", optional = true }
click = "^8.1.7"
mypy = "1.13.0" # higher versions cause issues with mypy extension
pomegranate = "^1.1.0" # Py3.12 support
pydantic = "^2.9.2"
pyomo = "^6.8.0"
ruff = "^0.6.9"
highspy = "^1.7.2"
pyranges = "^0.1.2"
seaborn = "^0.13.2"
typer = "^0.12.5"
torch = { version =">=2.5.1, =2.*", source="pytorch-cpu"} # Required by pomegranate/cnvkit
memray = "^1.15.0"
pandera = "0.23.0" # Bug with parsers running twice (pre-v0.23.0) causes issues https://github.com/unionai-oss/pandera/issues/1842
decorator = "^5.2.1"
gurobipy = "^12.0.1"
requests = "^2.32.3"

[[tool.poetry.source]]
name = "pytorch-cpu"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[build-system]
build-backend = "poetry.core.masonry.api"
requires = [
  "setuptools",
  "poetry-core>=1.0.7",
  "Cython",
  "pip>=22.0.0",
  "pyproject-hooks==1.0.0",
]

[tool.poetry.extras]
dev = ["black", "pytest", "flake8", "codecov", "jupyter", "pre-commit", "isort"]
docs = [
  "sphinx",
  "scanpydoc",
  "nbsphinx",
  "nbsphinx-link",
  "ipython",
  "pydata-sphinx-theme",
  "typing_extensions",
  "sphinx-autodoc-typehints",
  "sphinx_gallery",
]

[tool.poetry.scripts]
coral = "coral.cli:coral_app"

[tool.ruff]
lint.select = ["ALL"]
lint.ignore = [
  "EM101",   # String literal in exception
  "E501",
  "D",       # Docstrings
  "TD",      # TODO metadata
  "COM812",  # Trailing comma
  "PLR2004", # "magic" value in comparison rather than constant
  "G004",    # f-strings
  "UP006",   # Use primitive types rather than `typing` equivalents (only allowed py3.12+)
  "FBT002",  # Boolean default positional arg
  "PLR0913", # > 5 args in function signature
  "T201",    # No prints
  "TRY003",  # Long messages outside exception class
  "EM102",   # f-string in exception
  "ERA001",  # commented-out code, inaccurate
  "RUF005",  # Prefer iterable unpacking over concatenation
  "PLR0911", # too-many-return-statements
  "FIX002",  # Line contains TODO
  "TRY400",  # logger.error vs. logger.exception (don't want to log traceback)
  "TCH001",  # typing-only-first-party-import
]
lint.extend-select = ["I"]
line-length = 80
lint.pycodestyle.max-doc-length = 80

[tool.mypy]
enable_error_code = "possibly-undefined"
disable_error_code = "import-untyped"
exclude = [
  "hsr.py", 
  "scripts/report_nanopore_qc.py",
  "plot_amplicons.py", 
  "plot_cn.py"
]
# plugins = "numpy.typing.mypy_plugin"
strict = false

[tool.pyright]
exclude = [
    "**/__pycache__",
    "**/report_nanopore_qc.py"
]
defineConstant = { DEBUG = true }

reportMissingImports = "error"
reportMissingTypeStubs = false

pythonVersion = "3.12"
pythonPlatform = "Linux"

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
'coral' = ["supplemental_data/*"]